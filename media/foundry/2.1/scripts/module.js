dispatch.to("Foundry/2.1 Core Plugins").at(function($,manifest){$.module=function(){var self=function(name,factory){var module;if(typeof name==="string"){module=self.get(name);if(factory===undefined){return module}if($.isFunction(factory)){module.factory=factory;module.status="loading";factory.call(module,$);return module}}var _this=this;if($.isArray(name)){var tasks=$.map(name,function(task){if($.isFunction(task)){return task}if($.isPlainObject(task)){var module=self.get(task.name);if(module===undefined){return null}if(module.status==="pending"){module.status="loading"}task.module=module;return task}});$.each(tasks,function(i,task){if($.isFunction(task)){task();return}if($.isPlainObject(task)){self.apply(_this,[task.name,task.factory])}})}};$.extend(self,{registry:{},get:function(name){if(name===undefined)return;return self.registry[name]||self.create(name)},create:function(name){var module=$.Deferred();$.extend(module,{name:name,type:"module",status:"pending"});module.done(function(){module.exports=this;module.status="ready"});return self.registry[name]=module},remove:function(name){delete self.registry[name]}});return self}();dispatch.to("Foundry/2.1 Modules").at(function(exports,manifest){$.module(manifest.name,exports)})});